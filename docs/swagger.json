{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/btc/getrawblock": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "get raw block with blockhash",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ordx.btc"
                ],
                "summary": "get raw block with blockhash",
                "parameters": [
                    {
                        "type": "string",
                        "description": "blockHash",
                        "name": "blockHash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/bitcoind.RawBlockResp"
                        }
                    },
                    "401": {
                        "description": "Invalid API Key"
                    }
                }
            }
        },
        "/btc/tx": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "send Raw Transaction",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ordx.btc"
                ],
                "summary": "send Raw Transaction",
                "parameters": [
                    {
                        "description": "Signed transaction hex",
                        "name": "signedTxHex",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Reject transactions whose fee rate is higher than the specified value, expressed in BTC/kB.default:",
                        "name": "maxfeerate",
                        "in": "body",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/bitcoind.SendRawTxResp"
                        }
                    },
                    "401": {
                        "description": "Invalid API Key"
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Check the health status of the service",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "index"
                ],
                "summary": "Health Check",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/index.HealthResp"
                        }
                    }
                }
            }
        },
        "/inscription/address/{address}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a list of Inscription for a specific address",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "index.inscription"
                ],
                "summary": "Get a list of Inscription for a specific address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Start index for pagination",
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit for pagination",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/index.OrdInscriptionListResp"
                        }
                    },
                    "401": {
                        "description": "Invalid API Key"
                    }
                }
            }
        },
        "/inscription/genesesaddress/{address}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a list of Inscription for a specific geneses address",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "index.inscription"
                ],
                "summary": "Get a list of Inscription for a specific geneses address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "geneses address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Start index for pagination",
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit for pagination",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/index.OrdInscriptionListResp"
                        }
                    },
                    "401": {
                        "description": "Invalid API Key"
                    }
                }
            }
        },
        "/inscription/id/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get inscription with inscription id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "index.inscription"
                ],
                "summary": "Get inscription with inscription id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "inscription id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/index.OrdInscriptionResp"
                        }
                    },
                    "401": {
                        "description": "Invalid API Key"
                    }
                }
            }
        },
        "/inscription/number/{number}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get inscription with inscription number",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "index.inscription"
                ],
                "summary": "Get inscription with inscription number",
                "parameters": [
                    {
                        "type": "string",
                        "description": "inscription Number",
                        "name": "number",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/index.OrdInscriptionResp"
                        }
                    },
                    "401": {
                        "description": "Invalid API Key"
                    }
                }
            }
        },
        "/inscription/sat/{sat}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a list of Inscription with sat",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "index.inscription"
                ],
                "summary": "Get a list of Inscription with sat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "sat",
                        "name": "sat",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Start index for pagination",
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit for pagination",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/index.OrdInscriptionListResp"
                        }
                    },
                    "401": {
                        "description": "Invalid API Key"
                    }
                }
            }
        },
        "/ord/content/{inscriptionid}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "get ordinal content",
                "produces": [
                    "image/*"
                ],
                "tags": [
                    "ordx.ord"
                ],
                "summary": "get ordinal content",
                "parameters": [
                    {
                        "type": "string",
                        "description": "inscription ID",
                        "name": "inscriptionid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid API Key"
                    }
                }
            }
        },
        "/ord/preview/{inscriptionid}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "get ordinal preview",
                "produces": [
                    "image/*"
                ],
                "tags": [
                    "ordx.ord"
                ],
                "summary": "get ordinal preview",
                "parameters": [
                    {
                        "type": "string",
                        "description": "inscription ID",
                        "name": "inscriptionid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid API Key"
                    }
                }
            }
        },
        "/ord/r/blockhash": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "ordinal recursive endpoint for get lastest block hash",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ordx.ord.r"
                ],
                "summary": "ordinal recursive endpoint for get lastest block hash",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/ord.RBlockHashResp"
                        }
                    },
                    "401": {
                        "description": "Invalid API Key"
                    }
                }
            }
        },
        "/ord/r/blockhash/{height}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "ordinal recursive endpoint for get block hash",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ordx.ord.r"
                ],
                "summary": "ordinal recursive endpoint for get block hash",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "height",
                        "name": "height",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/ord.RBlockHashResp"
                        }
                    },
                    "401": {
                        "description": "Invalid API Key"
                    }
                }
            }
        },
        "/ord/r/blockheight": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "ordinal recursive endpoint for get lastest block height",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ordx.ord.r"
                ],
                "summary": "ordinal recursive endpoint for get lastest block height",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/ord.RBlockHeightResp"
                        }
                    },
                    "401": {
                        "description": "Invalid API Key"
                    }
                }
            }
        },
        "/ord/r/blockinfo/{query}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "ordinal recursive endpoint for get block info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ordx.ord.r"
                ],
                "summary": "ordinal recursive endpoint for get block info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "block height or block hash",
                        "name": "query",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/ord.RBlockInfoResp"
                        }
                    },
                    "401": {
                        "description": "Invalid API Key"
                    }
                }
            }
        },
        "/ord/r/blocktime": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "ordinal recursive endpoint for get UNIX time stamp of latest block",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ordx.ord.r"
                ],
                "summary": "ordinal recursive endpoint for get UNIX time stamp of latest block",
                "parameters": [
                    {
                        "type": "string",
                        "description": "block height or block hash",
                        "name": "query",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "Invalid API Key"
                    }
                }
            }
        },
        "/ord/r/children/{inscriptionid}/{page}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "ordinal recursive endpoint for get the first 100 children ids",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ordx.ord.r"
                ],
                "summary": "ordinal recursive endpoint for get the first 100 children ids",
                "parameters": [
                    {
                        "type": "string",
                        "description": "inscription ID example: 79b0e9dbfaf11e664abafbd8fec7d734bfa2d59013f25c50aaac1264f700832di0",
                        "name": "inscriptionid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "page example: 0",
                        "name": "page",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/ord.RInscriptionIdsPaginationResp"
                        }
                    },
                    "401": {
                        "description": "Invalid API Key"
                    }
                }
            }
        },
        "/ord/r/inscription/{inscriptionid}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "ordinal recursive endpoint for get inscription info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ordx.ord.r"
                ],
                "summary": "ordinal recursive endpoint for get inscription info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "inscription ID example: 79b0e9dbfaf11e664abafbd8fec7d734bfa2d59013f25c50aaac1264f700832di0",
                        "name": "inscriptionid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/ord.RInscriptionResp"
                        }
                    },
                    "401": {
                        "description": "Invalid API Key"
                    }
                }
            }
        },
        "/ord/r/metadata/{inscriptionid}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "ordinal recursive endpoint for get hex-encoded CBOR metadata of an inscription",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ordx.ord.r"
                ],
                "summary": "ordinal recursive endpoint for get hex-encoded CBOR metadata of an inscription",
                "parameters": [
                    {
                        "type": "string",
                        "description": "inscription ID example: a4b6fccd00222e79ec0307d52fe9f8bfa3713cd0c170f95065f5d859e0c6a0f5i0",
                        "name": "inscriptionid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/ord.RMetadataResp"
                        }
                    },
                    "401": {
                        "description": "Invalid API Key"
                    }
                }
            }
        },
        "/ord/r/sat/{satnumber}/at/{index}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "ordinal recursive endpoint for get the inscription id at \u003cINDEX\u003e of all inscriptions on a sat",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ordx.ord.r"
                ],
                "summary": "ordinal recursive endpoint for get the inscription id at \u003cINDEX\u003e of all inscriptions on a sat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "sat number example: 1165647477496168",
                        "name": "satnumber",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "page example: -1",
                        "name": "index",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/ord.RInscriptionIdResp"
                        }
                    },
                    "401": {
                        "description": "Invalid API Key"
                    }
                }
            }
        },
        "/ord/r/sat/{satnumber}/{page}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "ordinal recursive endpoint for get the first 100 inscription ids on a sat",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ordx.ord.r"
                ],
                "summary": "ordinal recursive endpoint for get the first 100 inscription ids on a sat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "sat number example: 1165647477496168",
                        "name": "satnumber",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "page example: 0",
                        "name": "page",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/ord.RInscriptionIdsPaginationResp"
                        }
                    },
                    "401": {
                        "description": "Invalid API Key"
                    }
                }
            }
        },
        "/ord/status": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "get ordinal status",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ordx.ord"
                ],
                "summary": "get ordinal status",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/ord.OrdStatusResp"
                        }
                    },
                    "401": {
                        "description": "Invalid API Key"
                    }
                }
            }
        },
        "/ordstatus": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "index status",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "index"
                ],
                "summary": "index status",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/index.IndexStatusResp"
                        }
                    },
                    "401": {
                        "description": "Invalid API Key"
                    }
                }
            }
        }
    },
    "definitions": {
        "bitcoind.RawBlockResp": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "data": {
                    "type": "string",
                    "example": ""
                },
                "msg": {
                    "type": "string",
                    "example": "ok"
                }
            }
        },
        "bitcoind.SendRawTxResp": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "data": {
                    "type": "string",
                    "example": "ae74538baa914f3799081ba78429d5d84f36a0127438e9f721dff584ac17b346"
                },
                "msg": {
                    "type": "string",
                    "example": "ok"
                }
            }
        },
        "index.HealthResp": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "index.IndexStatusResp": {
            "type": "object",
            "properties": {
                "addressCount": {
                    "type": "integer"
                },
                "blessedInscriptions": {
                    "type": "integer"
                },
                "cursedInscriptions": {
                    "type": "integer"
                },
                "dbVersion": {
                    "type": "string"
                },
                "genesesAddressCount": {
                    "type": "integer"
                },
                "indexVersion": {
                    "type": "string"
                },
                "syncInscriptionHeight": {
                    "type": "integer"
                },
                "syncTransferInscriptionHeight": {
                    "type": "integer"
                }
            }
        },
        "index.OrdInscriptionAsset": {
            "type": "object",
            "properties": {
                "inscription": {
                    "$ref": "#/definitions/pb.Inscription"
                },
                "utxo": {
                    "type": "string"
                }
            }
        },
        "index.OrdInscriptionListData": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/index.OrdInscriptionAsset"
                    }
                },
                "start": {
                    "type": "integer",
                    "example": 0
                },
                "total": {
                    "type": "integer",
                    "example": 9992
                }
            }
        },
        "index.OrdInscriptionListResp": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "data": {
                    "$ref": "#/definitions/index.OrdInscriptionListData"
                },
                "msg": {
                    "type": "string",
                    "example": "ok"
                }
            }
        },
        "index.OrdInscriptionResp": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "data": {
                    "$ref": "#/definitions/index.OrdInscriptionAsset"
                },
                "msg": {
                    "type": "string",
                    "example": "ok"
                }
            }
        },
        "ord.Inscription": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "children": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "content_length": {
                    "type": "integer"
                },
                "content_type": {
                    "type": "string"
                },
                "fee": {
                    "type": "integer"
                },
                "height": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "next": {
                    "type": "string"
                },
                "number": {
                    "type": "integer"
                },
                "parent": {
                    "type": "string"
                },
                "previous": {
                    "type": "string"
                },
                "sat": {
                    "type": "integer"
                },
                "satpoint": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "ord.InscriptionId": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "79b0e9dbfaf11e664abafbd8fec7d734bfa2d59013f25c50aaac1264f700832di0"
                }
            }
        },
        "ord.OrdStatusResp": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "data": {
                    "$ref": "#/definitions/ord.Status"
                },
                "isOrdx": {
                    "type": "boolean"
                },
                "msg": {
                    "type": "string",
                    "example": "ok"
                }
            }
        },
        "ord.RBlockHashResp": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "data": {
                    "type": "string"
                },
                "msg": {
                    "type": "string",
                    "example": "ok"
                }
            }
        },
        "ord.RBlockHeightResp": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "data": {
                    "type": "integer"
                },
                "msg": {
                    "type": "string",
                    "example": "ok"
                }
            }
        },
        "ord.RBlockInfo": {
            "type": "object",
            "properties": {
                "average_fee": {
                    "type": "integer"
                },
                "average_fee_rate": {
                    "type": "integer"
                },
                "bits": {
                    "type": "integer"
                },
                "chainwork": {
                    "type": "string"
                },
                "confirmations": {
                    "type": "integer"
                },
                "difficulty": {
                    "type": "number"
                },
                "hash": {
                    "type": "string"
                },
                "height": {
                    "type": "integer"
                },
                "max_fee": {
                    "type": "integer"
                },
                "max_fee_rate": {
                    "type": "integer"
                },
                "max_tx_size": {
                    "type": "integer"
                },
                "median_fee": {
                    "type": "integer"
                },
                "median_time": {
                    "type": "integer"
                },
                "merkle_root": {
                    "type": "string"
                },
                "min_fee": {
                    "type": "integer"
                },
                "min_fee_rate": {
                    "type": "integer"
                },
                "next_block": {
                    "type": "string"
                },
                "nonce": {
                    "type": "integer"
                },
                "previous_block": {
                    "type": "string"
                },
                "subsidy": {
                    "type": "integer"
                },
                "target": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                },
                "total_fee": {
                    "type": "integer"
                },
                "total_size": {
                    "type": "integer"
                },
                "total_weight": {
                    "type": "integer"
                },
                "transaction_count": {
                    "type": "integer"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "ord.RBlockInfoResp": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "data": {
                    "$ref": "#/definitions/ord.RBlockInfo"
                },
                "msg": {
                    "type": "string",
                    "example": "ok"
                }
            }
        },
        "ord.RInscriptionIdResp": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "data": {
                    "$ref": "#/definitions/ord.InscriptionId"
                },
                "msg": {
                    "type": "string",
                    "example": "ok"
                }
            }
        },
        "ord.RInscriptionIdsPagination": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "79b0e9dbfaf11e664abafbd8fec7d734bfa2d59013f25c50aaac1264f700832di0"
                    ]
                },
                "more": {
                    "type": "boolean",
                    "example": false
                },
                "page": {
                    "type": "integer"
                }
            }
        },
        "ord.RInscriptionIdsPaginationResp": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "data": {
                    "$ref": "#/definitions/ord.RInscriptionIdsPagination"
                },
                "msg": {
                    "type": "string",
                    "example": "ok"
                }
            }
        },
        "ord.RInscriptionResp": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "data": {
                    "$ref": "#/definitions/ord.Inscription"
                },
                "msg": {
                    "type": "string",
                    "example": "ok"
                }
            }
        },
        "ord.RMetadataResp": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "data": {
                    "type": "string"
                },
                "msg": {
                    "type": "string",
                    "example": "ok"
                }
            }
        },
        "ord.Status": {
            "type": "object",
            "properties": {
                "blessed_inscriptions": {
                    "type": "integer"
                },
                "chain": {
                    "type": "string"
                },
                "content_type_counts": {
                    "type": "array",
                    "items": {}
                },
                "cursed_inscriptions": {
                    "type": "integer"
                },
                "height": {
                    "type": "integer"
                },
                "initial_sync_time": {
                    "type": "object",
                    "properties": {
                        "nanos": {
                            "type": "integer"
                        },
                        "secs": {
                            "type": "integer"
                        }
                    }
                },
                "inscriptions": {
                    "type": "integer"
                },
                "lost_sats": {
                    "type": "integer"
                },
                "minimum_rune_for_next_block": {
                    "type": "string"
                },
                "rune_index": {
                    "type": "boolean"
                },
                "runes": {
                    "type": "integer"
                },
                "sat_index": {
                    "type": "boolean"
                },
                "started": {
                    "type": "string"
                },
                "transaction_index": {
                    "type": "boolean"
                },
                "unrecoverably_reorged": {
                    "type": "boolean"
                },
                "uptime": {
                    "type": "object",
                    "properties": {
                        "nanos": {
                            "type": "integer"
                        },
                        "secs": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "pb.Inscription": {
            "type": "object",
            "properties": {
                "OrdSat": {
                    "type": "integer"
                },
                "address": {
                    "type": "string"
                },
                "children": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "contentLength": {
                    "type": "integer"
                },
                "contentType": {
                    "type": "string"
                },
                "fee": {
                    "type": "integer"
                },
                "genesesAddress": {
                    "type": "string"
                },
                "height": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "next": {
                    "type": "string"
                },
                "number": {
                    "type": "integer"
                },
                "parent": {
                    "type": "string"
                },
                "previous": {
                    "type": "string"
                },
                "sat": {
                    "type": "integer"
                },
                "satPoint": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                },
                "value": {
                    "type": "integer"
                }
            }
        }
    }
}